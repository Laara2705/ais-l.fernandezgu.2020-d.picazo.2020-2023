name: Deployment Testing

on:
  pull_request:
    branches:
      - master
      
jobs:
  deployment-testing:
    runs-on: ubuntu-latest
    steps:
      #- name: Verifying source branch
      #  run: |
       #    if [[ "${{ github.event.pull_request.head.ref }}" != "develop" ]]; then
        #    echo "The pull request source branch is not 'develop'. Exiting."
         #   exit 1
          # fi
      - name: Installing Okteto CLI
        run: |
          curl https://get.okteto.com -sSfL | sh
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Executing integration testing
        run: |
          mvn test -Dtest=OpenLibraryServiceIntegrationTest | tee integ-results.txt
      - name: Generating integration artifact
        uses: actions/upload-artifact@v3
        with:
          name: Integration Testing Results
          path: integ-results.txt
      - name: Executing unitary testing
        run: |
          mvn test -Dtest=ReviewServiceUnitaryTest | tee unit-results.txt
      - name: Generating unitary artifact
        uses: actions/upload-artifact@v3
        with:
          name: Unitary Testing Results
          path: unit-results.txt
      - name: Executing Selenium testing
        run: |
          mvn test -Dtest=SeleniumTest | tee selenium-results.txt
# Commented now due to github's free plan space limitation          
#      - name: Generating selenium artifact 
#        uses: actions/upload-artifact@v3
#        with:
#          name: Selenium Testing Results
#          path: selenium-results.txt
      - name: Executing REST testing
        run: |
          mvn test -Dtest=RestTest | tee rest-results.txt
      - name: Generating REST artifact
        uses: actions/upload-artifact@v3
        with:
          name: REST Testing Results
          path: rest-results.txt
      - name: Building Docker Image
        run: |
          mvn spring-boot:build-image -DskipTests -Dspring-boot.build-image.imageName=${{ secrets.DOCKERHUB_USERNAME }}/books-reviewer:$(mvn org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate -Dexpression=project.version -q -DforceStdout)
      - name: Loging in to Docker Hub
        run: |
          docker login --username="${{ secrets.DOCKERHUB_USERNAME }}" --password="${{ secrets.DOCKERHUB_TOKEN }}"
      - name: Pushing Docker Image
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/books-reviewer:$(mvn org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate -Dexpression=project.version -q -DforceStdout) | tee docker-push-results.txt
      - name: Generating DockerPush artifact
        uses: actions/upload-artifact@v3
        with:
          name: Docker Push Results
          path: docker-push-results.txt
      - name: Closing Docker Hub
        run: |
          docker logout
      - name: Login into Okteto
        run: okteto context use https://cloud.okteto.com --token ${{ secrets.OKTETO_TOKEN }}
      - name: Deploy to Okteto
        run: okteto deploy --wait
     
